<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.dao.store.QuestionDao">

    <!--配置实体类属性和数据库表中列的对应关系-->
    <resultMap id="BaseResultMap" type="com.it.domain.store.Question">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="company_id" jdbcType="VARCHAR" property="companyId"/>
        <result column="catalog_id" jdbcType="VARCHAR" property="catalogId"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="subject" jdbcType="VARCHAR" property="subject"/>
        <result column="analysis" jdbcType="VARCHAR" property="analysis"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="difficulty" jdbcType="VARCHAR" property="difficulty"/>
        <result column="is_classic" jdbcType="VARCHAR" property="isClassic"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="review_status" jdbcType="VARCHAR" property="reviewStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
        <association property="company"
                     column="company_id"
                     javaType="com.it.domain.store.Company"
                     select="com.it.dao.store.CompanyDao.findById">

        </association>
        <association property="catalog"
                     column="catalog_id"
                     javaType="com.it.domain.store.Catalog"
                     select="com.it.dao.store.CatalogDao.findById">

        </association>
    </resultMap>

    <!--配置查询的列名公共SQL语句-->
    <sql id="Base_Column_List">
        id, catalog_id, company_id, remark,subject,analysis,type, difficulty, is_classic,
        state, review_status, create_time,picture
    </sql>

    <!--配置查询所有，带条件-->
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from st_question
        order by create_time desc
    </select>

    <!--配置根据ID查询-->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from st_question
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <!--配置根据id删除-->
    <delete id="delete" parameterType="java.lang.String">
        delete from st_question where id = #{id,jdbcType=VARCHAR}
    </delete>

    <!--配置全字段插入-->
    <insert id="save" parameterType="com.it.domain.store.Question">
        insert into st_question (id, catalog_id, company_id, remark,subject,analysis,type, difficulty, is_classic,
                                 state, review_status, create_time,picture)
        values (#{id,jdbcType=VARCHAR}, #{catalogId,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{analysis,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{difficulty,jdbcType=VARCHAR}, #{isClassic,jdbcType=VARCHAR},
        #{state,jdbcType=VARCHAR}, #{reviewStatus,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},#{picture,jdbcType=VARCHAR})
    </insert>

    <!--配置全字段更新-->
    <update id="update" parameterType="com.it.domain.store.Question">
        update st_question
        set catalog_id = #{catalogId,jdbcType=VARCHAR},
            company_id = #{companyId,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            subject = #{subject,jdbcType=VARCHAR},
            analysis = #{analysis,jdbcType=VARCHAR},
        <!--type = #{type,jdbcType=VARCHAR},-->
            difficulty = #{difficulty,jdbcType=VARCHAR},
            is_classic = #{isClassic,jdbcType=VARCHAR},
            state = #{state,jdbcType=VARCHAR},
            picture = #{picture,jdbcType=VARCHAR}
        <!--review_status = #{reviewStatus,jdbcType=VARCHAR},-->
        <!--create_time = #{createTime,jdbcType=TIMESTAMP}-->
where id = #{id,jdbcType=VARCHAR}
</update>
</mapper>